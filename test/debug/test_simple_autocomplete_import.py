#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test simple de importaci√≥n del autocompletado
"""
import sys
import os

# A√±adir el directorio ra√≠z al path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', '..'))

def test_import_simple_autocomplete():
    """Test de importaci√≥n del autocompletado simple"""
    try:
        print("üîß Probando importaci√≥n de SimpleProductoAutocomplete...")
        from common.simple_producto_autocomplete import SimpleProductoAutocomplete
        print("‚úÖ SimpleProductoAutocomplete importado correctamente")
        return True
        
    except Exception as e:
        print(f"‚ùå Error en importaci√≥n: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_import_dialog():
    """Test de importaci√≥n del di√°logo modificado"""
    try:
        print("üîß Probando importaci√≥n del di√°logo modificado...")
        # Solo importar, no crear instancia
        import ui.producto_factura_dialog
        print("‚úÖ Di√°logo modificado importado correctamente")
        return True
        
    except Exception as e:
        print(f"‚ùå Error en importaci√≥n del di√°logo: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_basic_functionality():
    """Test b√°sico de funcionalidad sin UI"""
    try:
        print("üîß Probando funcionalidad b√°sica...")
        
        # Simular datos de productos
        from database.models import Producto
        
        # Verificar que podemos crear un producto
        producto_test = Producto(
            nombre="Test Simple Autocomplete",
            referencia="TESTSAC001",
            precio=50.0,
            iva_recomendado=21.0
        )
        
        print(f"   Producto de test: {producto_test.nombre}")
        print("‚úÖ Funcionalidad b√°sica correcta")
        return True
        
    except Exception as e:
        print(f"‚ùå Error en funcionalidad b√°sica: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Test de importaci√≥n del autocompletado simple")
    print("=" * 60)
    
    success1 = test_import_simple_autocomplete()
    success2 = test_import_dialog()
    success3 = test_basic_functionality()
    
    print("\n" + "=" * 60)
    print("üìä RESUMEN:")
    print(f"   Importaci√≥n autocompletado: {'‚úÖ PASS' if success1 else '‚ùå FAIL'}")
    print(f"   Importaci√≥n di√°logo: {'‚úÖ PASS' if success2 else '‚ùå FAIL'}")
    print(f"   Funcionalidad b√°sica: {'‚úÖ PASS' if success3 else '‚ùå FAIL'}")
    
    if success1 and success2 and success3:
        print("\nüéâ TODOS LOS TESTS DE IMPORTACI√ìN PASARON")
        print("El autocompletado simple est√° listo para usar.")
        print("\nüí° PR√ìXIMOS PASOS:")
        print("   1. Probar el di√°logo de producto en la aplicaci√≥n")
        print("   2. Verificar que el autocompletado funciona correctamente")
        print("   3. Ajustar la interfaz si es necesario")
    else:
        print("\n‚ö†Ô∏è ALGUNOS TESTS FALLARON")
        print("Revisar los errores mostrados arriba.")

if __name__ == "__main__":
    main()
