#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
D√©monstration des messages d'erreur copiables dans l'interface de produits
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

import customtkinter as ctk
from ui.productos import ProductosWindow
from database.database import db
from utils.logger import get_logger

def demo_copyable_error_messages():
    """D√©monstration des messages d'erreur copiables"""
    
    print("üß™ D√âMONSTRATION - Messages d'erreur copiables")
    print("=" * 60)
    
    # Initialiser la base de donn√©es
    db.initialize()
    
    # Cr√©er l'application principale
    app = ctk.CTk()
    app.title("Demo - Messages Copiables")
    app.geometry("400x300")
    
    # Logger
    logger = get_logger("demo_copyable")
    
    def test_error_message():
        """Test d'un message d'erreur copiable"""
        try:
            # Ouvrir la fen√™tre de produits
            productos_window = ProductosWindow(app)
            
            # Simuler une erreur de validation en essayant de sauvegarder un produit vide
            print("\n1Ô∏è‚É£ Test de validation avec champs vides...")
            print("   - Ouvrir la fen√™tre de produits")
            print("   - Cliquer sur 'Guardar' sans remplir les champs")
            print("   - Le message d'erreur devrait √™tre copiable")
            
            # Forcer une erreur de validation
            productos_window.nombre_entry.delete(0, 'end')  # Vider le nom
            productos_window.referencia_entry.delete(0, 'end')  # Vider la r√©f√©rence
            productos_window.precio_entry.delete(0, 'end')  # Vider le prix
            productos_window.precio_entry.insert(0, "prix_invalide")  # Prix invalide
            
            # D√©clencher la validation (cela devrait montrer un message d'erreur copiable)
            productos_window.guardar_producto()
            
            logger.info("‚úÖ Test de message d'erreur copiable d√©clench√©")
            
        except Exception as e:
            logger.error(f"‚ùå Erreur dans le test: {e}")
    
    def test_success_message():
        """Test d'un message de succ√®s copiable"""
        try:
            # Ouvrir la fen√™tre de produits
            productos_window = ProductosWindow(app)
            
            print("\n2Ô∏è‚É£ Test de message de succ√®s...")
            print("   - Remplir un produit valide")
            print("   - Sauvegarder")
            print("   - Le message de succ√®s devrait √™tre copiable")
            
            # Remplir avec des donn√©es valides
            productos_window.nombre_entry.delete(0, 'end')
            productos_window.nombre_entry.insert(0, "Producto Demo Copiable")
            
            productos_window.referencia_entry.delete(0, 'end')
            productos_window.referencia_entry.insert(0, "DEMO-COPY-001")
            
            productos_window.precio_entry.delete(0, 'end')
            productos_window.precio_entry.insert(0, "19.99")
            
            productos_window.categoria_entry.delete(0, 'end')
            productos_window.categoria_entry.insert(0, "Demo")
            
            # Sauvegarder (cela devrait montrer un message de succ√®s copiable)
            productos_window.guardar_producto()
            
            logger.info("‚úÖ Test de message de succ√®s copiable d√©clench√©")
            
        except Exception as e:
            logger.error(f"‚ùå Erreur dans le test de succ√®s: {e}")
    
    # Cr√©er l'interface de test
    main_frame = ctk.CTkFrame(app)
    main_frame.pack(fill="both", expand=True, padx=20, pady=20)
    
    title_label = ctk.CTkLabel(
        main_frame,
        text="üß™ Demo Messages Copiables",
        font=ctk.CTkFont(size=20, weight="bold")
    )
    title_label.pack(pady=20)
    
    info_label = ctk.CTkLabel(
        main_frame,
        text="Haz clic en los botones para probar los mensajes copiables.\n"
             "Los mensajes tendr√°n un bot√≥n 'üìã Copiar' para copiar el texto.",
        font=ctk.CTkFont(size=12),
        wraplength=350
    )
    info_label.pack(pady=10)
    
    # Bot√≥n para test de error
    error_btn = ctk.CTkButton(
        main_frame,
        text="üö® Probar Mensaje de Error Copiable",
        command=test_error_message,
        fg_color="#dc3545",
        hover_color="#c82333",
        height=40
    )
    error_btn.pack(pady=10, fill="x")
    
    # Bot√≥n para test de √©xito
    success_btn = ctk.CTkButton(
        main_frame,
        text="‚úÖ Probar Mensaje de √âxito Copiable",
        command=test_success_message,
        fg_color="#28a745",
        hover_color="#218838",
        height=40
    )
    success_btn.pack(pady=10, fill="x")
    
    # Instrucciones
    instructions_frame = ctk.CTkFrame(main_frame)
    instructions_frame.pack(fill="x", pady=20)
    
    instructions_label = ctk.CTkLabel(
        instructions_frame,
        text="üìã Instrucciones:\n\n"
             "1. Haz clic en cualquier bot√≥n de prueba\n"
             "2. Se abrir√° la ventana de productos\n"
             "3. Aparecer√° un mensaje con bot√≥n 'Copiar'\n"
             "4. Haz clic en 'Copiar' para copiar el mensaje\n"
             "5. Pega el mensaje donde necesites (Ctrl+V)",
        font=ctk.CTkFont(size=11),
        justify="left"
    )
    instructions_label.pack(padx=10, pady=10)
    
    # Bot√≥n salir
    exit_btn = ctk.CTkButton(
        main_frame,
        text="‚ùå Salir",
        command=app.quit,
        fg_color="#6c757d",
        hover_color="#5a6268"
    )
    exit_btn.pack(pady=10)
    
    print("\nüìã Instrucciones:")
    print("1. Haz clic en los botones para probar los mensajes copiables")
    print("2. Los mensajes de error/√©xito tendr√°n un bot√≥n 'üìã Copiar'")
    print("3. Usa el bot√≥n para copiar el mensaje al portapapeles")
    print("4. Pega donde necesites con Ctrl+V")
    print("\nüéØ Objetivo: Verificar que todos los mensajes son copiables")
    
    # Ejecutar la aplicaci√≥n
    app.mainloop()

if __name__ == "__main__":
    demo_copyable_error_messages()
