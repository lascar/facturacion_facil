#!/usr/bin/env python3
"""
D√©monstration de la nouvelle fonctionnalit√© de t√©l√©chargement PDF configurable
"""

import sys
import os
import tempfile
# Ajouter le r√©pertoire racine du projet au PYTHONPATH
project_root = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
sys.path.insert(0, project_root)

def demo_pdf_download_feature():
    """D√©monstration compl√®te de la fonctionnalit√©"""
    
    print("üéØ === D√âMONSTRATION FONCTIONNALIT√â T√âL√âCHARGEMENT PDF ===\n")
    
    try:
        from database.models import Organizacion, Producto, Factura, FacturaItem
        from utils.pdf_generator import PDFGenerator
        from datetime import datetime
        import time
        
        print("üìã Cette d√©monstration montre comment:")
        print("   1. Configurer un r√©pertoire de t√©l√©chargement PDF dans l'organisation")
        print("   2. G√©n√©rer des PDFs qui s'ouvrent automatiquement")
        print("   3. Utiliser le r√©pertoire configur√© pour sauvegarder les PDFs")
        print("   4. Conserver le dernier choix de r√©pertoire\n")
        
        # √âtape 1: Configuration de l'organisation
        print("1Ô∏è‚É£ Configuration de l'organisation avec r√©pertoire PDF")
        
        # Cr√©er un r√©pertoire de d√©monstration
        demo_dir = os.path.expanduser("~/Downloads/Facturas_Demo")
        os.makedirs(demo_dir, exist_ok=True)
        print(f"   üìÅ R√©pertoire cr√©√©: {demo_dir}")
        
        # Configurer l'organisation
        org = Organizacion.get()
        org.nombre = "Empresa Demo PDF"
        org.directorio_descargas_pdf = demo_dir
        org.save()
        print("   ‚úÖ Organisation configur√©e avec r√©pertoire PDF")
        
        # √âtape 2: Cr√©er des donn√©es de d√©monstration
        print("\n2Ô∏è‚É£ Cr√©ation de donn√©es de d√©monstration")
        
        # Produit de d√©monstration
        unique_ref = f"DEMO-{int(time.time())}"
        producto = Producto(
            nombre="Producto Demostraci√≥n",
            referencia=unique_ref,
            precio=99.99,
            iva_recomendado=21.0,
            categoria="Demo",
            descripcion="Producto para demostrar la funcionalidad PDF"
        )
        producto.save()
        print("   ‚úÖ Produit de d√©monstration cr√©√©")
        
        # Facture de d√©monstration
        unique_factura = f"DEMO-{int(time.time())}"
        factura = Factura(
            numero_factura=unique_factura,
            fecha_factura=datetime.now().date(),
            nombre_cliente="Cliente Demostraci√≥n",
            dni_nie_cliente="12345678Z",
            direccion_cliente="Calle Demo 123, Madrid",
            email_cliente="demo@cliente.com",
            telefono_cliente="+34 123 456 789",
            subtotal=99.99,
            total_iva=20.99,
            total_factura=120.98,
            modo_pago="tarjeta"
        )
        factura.save()
        print("   ‚úÖ Facture de d√©monstration cr√©√©e")
        
        # Item de facture
        item = FacturaItem(
            factura_id=factura.id,
            producto_id=producto.id,
            cantidad=1,
            precio_unitario=99.99,
            iva_aplicado=21.0,
            descuento=0
        )
        item.save()
        print("   ‚úÖ Item de facture ajout√©")
        
        # √âtape 3: G√©n√©ration PDF avec ouverture automatique
        print("\n3Ô∏è‚É£ G√©n√©ration PDF avec ouverture automatique")
        
        pdf_generator = PDFGenerator()
        
        print("   üîÑ G√©n√©ration du PDF...")
        pdf_path = pdf_generator.generar_factura_pdf(factura, auto_open=False)
        
        print(f"   ‚úÖ PDF g√©n√©r√©: {os.path.basename(pdf_path)}")
        print(f"   üìÅ Emplacement: {pdf_path}")
        print(f"   üìä Taille: {os.path.getsize(pdf_path) / 1024:.1f} KB")
        print("   üí° En mode normal, le PDF s'ouvrirait automatiquement!")
        
        # √âtape 4: D√©monstration du fallback
        print("\n4Ô∏è‚É£ D√©monstration du syst√®me de fallback")
        
        # Sauvegarder le r√©pertoire actuel
        original_dir = org.directorio_descargas_pdf
        
        # Configurer un r√©pertoire inexistant
        org.directorio_descargas_pdf = "/repertoire/inexistant"
        org.save()
        
        print("   ‚ö†Ô∏è  R√©pertoire configur√© inexistant")
        print("   üîÑ G√©n√©ration PDF avec fallback...")
        
        pdf_path_fallback = pdf_generator.generar_factura_pdf(factura, auto_open=False)
        print(f"   ‚úÖ PDF g√©n√©r√© avec fallback: {os.path.basename(pdf_path_fallback)}")
        print(f"   üìÅ Emplacement fallback: {pdf_path_fallback}")
        
        # Restaurer le r√©pertoire original
        org.directorio_descargas_pdf = original_dir
        org.save()
        print("   üîÑ R√©pertoire original restaur√©")
        
        # √âtape 5: Informations sur l'interface utilisateur
        print("\n5Ô∏è‚É£ Interface utilisateur")
        print("   Dans l'interface d'organisation, vous trouverez:")
        print("   ‚Ä¢ Un nouveau champ 'Directorio por defecto para descargas de PDF'")
        print("   ‚Ä¢ Un bouton 'Seleccionar' pour choisir le r√©pertoire")
        print("   ‚Ä¢ Le dernier r√©pertoire choisi est conserv√© automatiquement")
        print("   ‚Ä¢ Les PDFs g√©n√©r√©s s'ouvrent automatiquement")
        
        # √âtape 6: Avantages de la fonctionnalit√©
        print("\n6Ô∏è‚É£ Avantages de cette fonctionnalit√©")
        print("   ‚úÖ PDFs sauvegard√©s dans un r√©pertoire choisi par l'utilisateur")
        print("   ‚úÖ Ouverture automatique pour visualisation imm√©diate")
        print("   ‚úÖ Conservation du dernier choix de r√©pertoire")
        print("   ‚úÖ Syst√®me de fallback robuste")
        print("   ‚úÖ Compatible avec tous les syst√®mes d'exploitation")
        print("   ‚úÖ Int√©gration transparente avec l'interface existante")
        
        print(f"\nüéâ === D√âMONSTRATION TERMIN√âE ===")
        print(f"üìÅ Vos PDFs de d√©monstration sont dans: {demo_dir}")
        print("üí° Vous pouvez maintenant utiliser cette fonctionnalit√© dans l'application!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la d√©monstration: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = demo_pdf_download_feature()
    sys.exit(0 if success else 1)
